version: '3.7'

services:
  healthgg:
    container_name: healthgg-nestjs
    build:
      context: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    networks:
      - elk
    restart: always
    command: ['npm', 'run', 'start:dev']

  elasticsearch:
    container_name: elasticsearch
    # image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    build:
      context: ./elasticsearch
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      discovery.type: single-node
    networks:
      - elk
    restart: unless-stopped

  logstash:
    container_name: logstash
    # image: docker.elastic.co/logstash/logstash:8.15.0
    build:
      context: ./logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - 5000:5000
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    container_name: kibana
    # image: docker.elastic.co/kibana/kibana:8.15.0
    build:
      context: ./kibana
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    environment:
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
