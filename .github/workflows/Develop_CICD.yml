name: Docker Compose Develop CI/CD

on:
  pull_request:
    branches: ['develop']

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.9' # Update this with your desired Node.js version

      - name: SET ENV
        run: echo "${{ secrets.DOT_ENV_DEV }}" >> .env

      - name: Build Docker image
        run: |
          docker build -t ${{secrets.DOCKERHUB_USERNAME}}/healthgg:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push ${{secrets.DOCKERHUB_USERNAME}}/healthgg:latest

      - name: Deploy ELK Stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEV }} # 서버 IP 주소
          username: ${{ secrets.SSH_USERNAME_DEV }} # 서버 사용자 이름
          password: ${{ secrets.SSH_PASSWORD_DEV }} # SSH 개인 키
          port: ${{ secrets.SSH_PORT_DEV }} # SSH 포트 (기본값: 22)
          script: |
            docker pull ${{secrets.DOCKERHUB_USERNAME}}/healthgg:latest
            docker stop healthgg-container || true
            docker rm healthgg-container || true
            docker rmi $(docker images -f "dangling=true" -q)
            docker run -d --name healthgg-container -p 3000:3000 -e NODE_ENV=development --network elk  ${{secrets.DOCKERHUB_USERNAME}}/healthgg:latest
