input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-j-9.0.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://healthggDB:3306/healthDB"
    jdbc_user => "root"
    jdbc_password => "1234"
    schedule => "* * * * *"
    tracking_column => "created_at"
    tracking_column_type => "timestamp"
    statement => "SELECT * FROM food WHERE created_at > :sql_last_value"
    jdbc_paging_enabled => true
    jdbc_page_size => 5000
    id => "food"  # 입력 플러그인에 ID를 부여하여 구분
  }

  jdbc {
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-j-9.0.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://healthggDB:3306/healthDB"
    jdbc_user => "root"
    jdbc_password => "1234"
    schedule => "* * * * *"
    tracking_column => "fitness_machine_id"
    tracking_column_type => "numeric"
    statement => "SELECT * FROM fitness_machine WHERE fitness_machine_id > :sql_last_value"
    jdbc_paging_enabled => true
    jdbc_page_size => 5000
    id => "fitness_machine"  # 입력 플러그인에 ID를 부여하여 구분
  }
}


output {
  elasticsearch {
    hosts => ["http://172.19.0.2:9200"]
    index => "indexfood"
    document_id => "%{food_id}"  # food_id 필드를 고유 ID로 사용
    user => "elastic"
    password => "changeme"
    id => "food_output"  # 출력 플러그인에 ID를 부여하여 구분
  }

  elasticsearch {
    hosts => ["http://172.19.0.2:9200"]
    index => "indexfitness"
    document_id => "%{fitness_machine_id}"  # fitness_machine_id 필드를 고유 ID로 사용
    user => "elastic"
    password => "changeme"
    id => "fitness_machine_output"  # 출력 플러그인에 ID를 부여하여 구분
  }
}

