input {
	
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-j-9.0.0.jar"  # 올바른 JAR 파일 경로
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"  # 올바른 MySQL JDBC 드라이버 클래스
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:5555/mydatabase"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    schedule => "* * * * *"  # 매 분마다 실행
    statement => "SELECT * FROM food"
  
}
 jdbc {
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-j-9.0.0.jar"  # 올바른 JAR 파일 경로
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"  # 올바른 MySQL JDBC 드라이버 클래스
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:5555/mydatabase"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    schedule => "* * * * *"  # 매 분마다 실행
    statement => "SELECT * FROM fitness_machine"
  
}
}
## Add your filters / logstash plugins configuration here
filter {
  # 필요한 필터가 있다면 여기에 추가
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		index => "indexfitness"
    template => "/usr/share/logstash/test_template.json"
    document_id => "%{fitness_machine_id}"  # food_id 필드가 고유 ID로 사용됨
    #user => "admin"  # 인증 사용자 이름
    #password => "Dydtlr9988@"  # 인증 비밀번호
    #ssl_certificate_verification => false # SSL 사용을 명시 (OpenSearch의 경우 필수)
		##user => "elastic"
		##password => "changeme"
	}
	
	elasticsearch {
		hosts => "elasticsearch:9200"
		index => "indexfood"
    template => "/usr/share/logstash/test_template.json"
    document_id => "%{food_id}"  # food_id 필드가 고유 ID로 사용됨
    #user => "admin"  # 인증 사용자 이름
    #password => "Dydtlr9988@"  # 인증 비밀번호
    #ssl_certificate_verification => false # SSL 사용을 명시 (OpenSearch의 경우 필수)
		##user => "elastic"
		##password => "changeme"
	}
}
