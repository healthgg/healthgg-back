input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-j-9.0.0.jar"  # 올바른 JAR 파일 경로
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"  # 올바른 MySQL JDBC 드라이버 클래스
    jdbc_connection_string => "jdbc:mysql://healthgg-mysql:3306/healthDB"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    schedule => "* * * * *"  # 매 분마다 실행
    tracking_column => "created_at"  # 변경된 레코드를 추적할 컬럼
    tracking_column_type => "timestamp"  # 추적 컬럼의 타입 (timestamp, numeric 등)
    statement => "SELECT * FROM food WHERE created_at > :sql_last_value"
    jdbc_paging_enabled => true  # 페이징을 활성화하여 메모리 사용을 줄입니다.
    jdbc_page_size => 5000  # 페이지 크기 설정
  }
  
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-j-9.0.0.jar"  # 올바른 JAR 파일 경로
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"  # 올바른 MySQL JDBC 드라이버 클래스
    jdbc_connection_string => "jdbc:mysql://healthgg-mysql:3306/healthDB"
    jdbc_user => "root"
    jdbc_password => "rootpassword"
    schedule => "* * * * *"  # 매 분마다 실행
    tracking_column => "created_at"  # 변경된 레코드를 추적할 컬럼
    tracking_column_type => "numeric"  # 추적 컬럼의 타입 (timestamp, numeric 등)
    statement => "SELECT * FROM fitness_machine WHERE fitness_machine_id > :sql_last_value"
    jdbc_paging_enabled => true  # 페이징을 활성화하여 메모리 사용을 줄입니다.
    jdbc_page_size => 5000  # 페이지 크기 설정
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "indexfitness"
    template => "/usr/share/logstash/template_fitness.json"
    template_name => "fitness_template"
    document_id => "%{fitness_machine_id}"  # fitness_machine_id 필드가 고유 ID로 사용됨
    user => "elastic"  # 인증 사용자 이름
    password => "changeme"  # 인증 비밀번호
  }

  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "indexfood"
    template => "/usr/share/logstash/template_food.json"
    template_name => "food_template"
    document_id => "%{food_id}"  # food_id 필드가 고유 ID로 사용됨
    user => "elastic"  # 인증 사용자 이름
    password => "changeme"  # 인증 비밀번호
  }
}
